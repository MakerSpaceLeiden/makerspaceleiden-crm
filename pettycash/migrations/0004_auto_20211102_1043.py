# Generated by Django 3.2.7 on 2021-11-02 09:43

import datetime
from decimal import Decimal

import django.db.models.deletion
import djmoney.models.fields
import djmoney.models.validators
import dynamic_filenames
import simple_history.models
import stdimage.models
import stdimage.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("pettycash", "0003_auto_20211011_2147"),
    ]

    operations = [
        migrations.AlterField(
            model_name="historicalpettycashbalancecache",
            name="balance",
            field=djmoney.models.fields.MoneyField(
                decimal_places=2, default_currency="EUR", max_digits=8, null=True
            ),
        ),
        migrations.AlterField(
            model_name="historicalpettycashsku",
            name="amount",
            field=djmoney.models.fields.MoneyField(
                decimal_places=2, default_currency="EUR", max_digits=8, null=True
            ),
        ),
        migrations.AlterField(
            model_name="historicalpettycashtransaction",
            name="amount",
            field=djmoney.models.fields.MoneyField(
                decimal_places=2,
                default_currency="EUR",
                max_digits=8,
                null=True,
                validators=[djmoney.models.validators.MinMoneyValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="historicalpettycashtransaction",
            name="description",
            field=models.CharField(
                blank=True,
                help_text="Description / omschrijving van waarvoor deze betaling is",
                max_length=300,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="historicalpettycashtransaction",
            name="dst",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="Whom to pay the money to",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="historicalpettycashtransaction",
            name="src",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                help_text="Whom paid you",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="pettycashbalancecache",
            name="balance",
            field=djmoney.models.fields.MoneyField(
                decimal_places=2, default_currency="EUR", max_digits=8, null=True
            ),
        ),
        migrations.AlterField(
            model_name="pettycashsku",
            name="amount",
            field=djmoney.models.fields.MoneyField(
                decimal_places=2, default_currency="EUR", max_digits=8, null=True
            ),
        ),
        migrations.AlterField(
            model_name="pettycashtransaction",
            name="amount",
            field=djmoney.models.fields.MoneyField(
                decimal_places=2,
                default_currency="EUR",
                max_digits=8,
                null=True,
                validators=[djmoney.models.validators.MinMoneyValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="pettycashtransaction",
            name="description",
            field=models.CharField(
                blank=True,
                help_text="Description / omschrijving van waarvoor deze betaling is",
                max_length=300,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="pettycashtransaction",
            name="dst",
            field=models.ForeignKey(
                blank=True,
                help_text="Whom to pay the money to",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="isReceivedBy",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="pettycashtransaction",
            name="src",
            field=models.ForeignKey(
                blank=True,
                help_text="Whom paid you",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="isSentBy",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="PettycashReimbursementRequest",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=datetime.date.today, help_text="Date of expense"
                    ),
                ),
                (
                    "submitted",
                    models.DateTimeField(
                        default=datetime.date.today,
                        help_text="Date the request was submitted",
                    ),
                ),
                (
                    "amount_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[("EUR", "Euro")],
                        default="EUR",
                        editable=False,
                        max_length=3,
                    ),
                ),
                (
                    "amount",
                    djmoney.models.fields.MoneyField(
                        decimal_places=2,
                        default_currency="EUR",
                        help_text="This system will only accept reimbursement up to 100.0. Above that; contact the trustees directly (hetbestuur@makerspaceleiden.nl)",
                        max_digits=8,
                        validators=[
                            djmoney.models.validators.MinMoneyValidator(0),
                            djmoney.models.validators.MaxMoneyValidator(
                                Decimal("100.0")
                            ),
                        ],
                    ),
                ),
                (
                    "viaTheBank",
                    models.BooleanField(
                        default=False,
                        help_text="Check this box if you want to be paid via a IBAN/SEPA transfer; otherwise the amount will be credited to your Makerspace petty cash acount",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="Description / omschrijving van waarvoor deze betaling is",
                        max_length=300,
                    ),
                ),
                (
                    "scan",
                    stdimage.models.StdImageField(
                        blank=True,
                        help_text="Scan, photo or similar of the receipt",
                        null=True,
                        upload_to=dynamic_filenames.FilePattern(
                            filename_pattern="{app_label:.25}/{model_name:.30}/{uuid:base32}{ext}"
                        ),
                        validators=[
                            stdimage.validators.MinSizeValidator(100, 100),
                            stdimage.validators.MaxSizeValidator(8000, 8000),
                        ],
                    ),
                ),
                (
                    "dst",
                    models.ForeignKey(
                        help_text="Person to reemburse (usually you, yourself)",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="isReimbursedTo",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HistoricalPettycashReimbursementRequest",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=datetime.date.today, help_text="Date of expense"
                    ),
                ),
                (
                    "submitted",
                    models.DateTimeField(
                        default=datetime.date.today,
                        help_text="Date the request was submitted",
                    ),
                ),
                (
                    "amount_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[("EUR", "Euro")],
                        default="EUR",
                        editable=False,
                        max_length=3,
                    ),
                ),
                (
                    "amount",
                    djmoney.models.fields.MoneyField(
                        decimal_places=2,
                        default_currency="EUR",
                        help_text="This system will only accept reimbursement up to 100.0. Above that; contact the trustees directly (hetbestuur@makerspaceleiden.nl)",
                        max_digits=8,
                        validators=[
                            djmoney.models.validators.MinMoneyValidator(0),
                            djmoney.models.validators.MaxMoneyValidator(
                                Decimal("100.0")
                            ),
                        ],
                    ),
                ),
                (
                    "viaTheBank",
                    models.BooleanField(
                        default=False,
                        help_text="Check this box if you want to be paid via a IBAN/SEPA transfer; otherwise the amount will be credited to your Makerspace petty cash acount",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="Description / omschrijving van waarvoor deze betaling is",
                        max_length=300,
                    ),
                ),
                (
                    "scan",
                    models.TextField(
                        blank=True,
                        help_text="Scan, photo or similar of the receipt",
                        max_length=100,
                        null=True,
                        validators=[
                            stdimage.validators.MinSizeValidator(100, 100),
                            stdimage.validators.MaxSizeValidator(8000, 8000),
                        ],
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "dst",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Person to reemburse (usually you, yourself)",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical pettycash reimbursement request",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
