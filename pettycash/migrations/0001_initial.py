# Generated by Django 3.2.23 on 2023-11-29 10:51

from decimal import Decimal

import django.db.models.deletion
import django.utils.timezone
import djmoney.models.fields
import djmoney.models.validators
import dynamic_filenames
import simple_history.models
import stdimage.models
import stdimage.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("acl", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PettycashSku",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=300, null=True)),
                ("description", models.CharField(max_length=300, null=True)),
                (
                    "amount_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[("EUR", "Euro")],
                        default="EUR",
                        editable=False,
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "amount",
                    djmoney.models.fields.MoneyField(
                        decimal_places=2,
                        default_currency="EUR",
                        max_digits=8,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PettycashTerminal",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Name, initially as reported by the firmware. Potentially not unique!",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "fingerprint",
                    models.CharField(
                        blank=True,
                        help_text="SHA256 fingerprint of the client certificate.",
                        max_length=64,
                        null=True,
                    ),
                ),
                (
                    "nonce",
                    models.CharField(
                        blank=True,
                        help_text="256 bit nonce (as HEX)",
                        max_length=64,
                        null=True,
                    ),
                ),
                (
                    "date",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Time and date the device was last seen",
                        null=True,
                    ),
                ),
                (
                    "accepted",
                    models.BooleanField(
                        default=False,
                        help_text="Wether an administrator has checked the fingerprint against the display on the device and accepted it.",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PettycashTransaction",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateTimeField(
                        blank=True, help_text="Date of transaction", null=True
                    ),
                ),
                (
                    "amount_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[("EUR", "Euro")],
                        default="EUR",
                        editable=False,
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "amount",
                    djmoney.models.fields.MoneyField(
                        decimal_places=2,
                        default_currency="EUR",
                        max_digits=8,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Description / omschrijving van waarvoor deze betaling is",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "dst",
                    models.ForeignKey(
                        blank=True,
                        help_text="Whom to pay the money to",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="isReceivedBy",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "src",
                    models.ForeignKey(
                        blank=True,
                        help_text="Whom paid you",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="isSentBy",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PettycashStation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                (
                    "available_skus",
                    models.ManyToManyField(
                        blank=True,
                        help_text="SKUs avaialble at this terminal, when supported (or empty)",
                        related_name="availableSku",
                        to="pettycash.PettycashSku",
                    ),
                ),
                (
                    "default_sku",
                    models.ForeignKey(
                        blank=True,
                        help_text="Default SKU (or the only one) at boot time and reverted to after 60 seconds",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="defaultSku",
                        to="pettycash.pettycashsku",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="terminalIsLocated",
                        to="acl.location",
                    ),
                ),
                (
                    "terminal",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="station",
                        to="pettycash.pettycashterminal",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PettycashReimbursementRequest",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=django.utils.timezone.now, help_text="Date of expense"
                    ),
                ),
                (
                    "submitted",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Date the request was submitted",
                    ),
                ),
                (
                    "amount_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[("EUR", "Euro")],
                        default="EUR",
                        editable=False,
                        max_length=3,
                    ),
                ),
                (
                    "amount",
                    djmoney.models.fields.MoneyField(
                        decimal_places=2,
                        default_currency="EUR",
                        help_text="This system will only accept reimbursement up to 100.0. Above that; contact the trustees directly (hetbestuur@lists.makerspaceleiden.nl)",
                        max_digits=8,
                        validators=[
                            djmoney.models.validators.MinMoneyValidator(0),
                            djmoney.models.validators.MaxMoneyValidator(
                                Decimal("100.0")
                            ),
                        ],
                    ),
                ),
                (
                    "viaTheBank",
                    models.BooleanField(
                        default=False,
                        help_text="Check this box if you want to be paid via a IBAN/SEPA transfer; otherwise the amount will be credited to your Makerspace petty cash acount",
                    ),
                ),
                (
                    "isPayout",
                    models.BooleanField(
                        default=False, help_text="Internal hidden field"
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="Description / omschrijving van waarvoor deze betaling is",
                        max_length=300,
                    ),
                ),
                (
                    "scan",
                    stdimage.models.StdImageField(
                        blank=True,
                        force_min_size=False,
                        help_text="Scan, photo or similar of the receipt",
                        null=True,
                        upload_to=dynamic_filenames.FilePattern(
                            filename_pattern="{app_label:.25}/{model_name:.30}/{uuid:base32}{ext}"
                        ),
                        validators=[
                            stdimage.validators.MinSizeValidator(100, 100),
                            stdimage.validators.MaxSizeValidator(8000, 8000),
                        ],
                        variations={
                            "large": (600, 400),
                            "medium": (300, 200),
                            "thumbnail": (100, 100, True),
                        },
                    ),
                ),
                (
                    "dst",
                    models.ForeignKey(
                        help_text="Person to reemburse (usually you, yourself)",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="isReimbursedTo",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PettycashImportRecord",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        help_text="Date of last import",
                    ),
                ),
                (
                    "by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Person that did this import",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PettycashBalanceCache",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "balance_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[("EUR", "Euro")],
                        default="EUR",
                        editable=False,
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "balance",
                    djmoney.models.fields.MoneyField(
                        decimal_places=2,
                        default_currency="EUR",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "last",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        help_text="Last transaction that changed the balance",
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        to="pettycash.pettycashtransaction",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HistoricalPettycashTransaction",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "date",
                    models.DateTimeField(
                        blank=True, help_text="Date of transaction", null=True
                    ),
                ),
                (
                    "amount_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[("EUR", "Euro")],
                        default="EUR",
                        editable=False,
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "amount",
                    djmoney.models.fields.MoneyField(
                        decimal_places=2,
                        default_currency="EUR",
                        max_digits=8,
                        null=True,
                        validators=[djmoney.models.validators.MinMoneyValidator(0)],
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Description / omschrijving van waarvoor deze betaling is",
                        max_length=300,
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "dst",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Whom to pay the money to",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "src",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Whom paid you",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical pettycash transaction",
                "verbose_name_plural": "historical pettycash transactions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPettycashTerminal",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Name, initially as reported by the firmware. Potentially not unique!",
                        max_length=300,
                        null=True,
                    ),
                ),
                (
                    "fingerprint",
                    models.CharField(
                        blank=True,
                        help_text="SHA256 fingerprint of the client certificate.",
                        max_length=64,
                        null=True,
                    ),
                ),
                (
                    "nonce",
                    models.CharField(
                        blank=True,
                        help_text="256 bit nonce (as HEX)",
                        max_length=64,
                        null=True,
                    ),
                ),
                (
                    "date",
                    models.DateTimeField(
                        blank=True,
                        editable=False,
                        help_text="Time and date the device was last seen",
                        null=True,
                    ),
                ),
                (
                    "accepted",
                    models.BooleanField(
                        default=False,
                        help_text="Wether an administrator has checked the fingerprint against the display on the device and accepted it.",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical pettycash terminal",
                "verbose_name_plural": "historical pettycash terminals",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPettycashStation",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "description",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "default_sku",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Default SKU (or the only one) at boot time and reverted to after 60 seconds",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="pettycash.pettycashsku",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="acl.location",
                    ),
                ),
                (
                    "terminal",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="pettycash.pettycashterminal",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical pettycash station",
                "verbose_name_plural": "historical pettycash stations",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPettycashSku",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=300, null=True)),
                ("description", models.CharField(max_length=300, null=True)),
                (
                    "amount_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[("EUR", "Euro")],
                        default="EUR",
                        editable=False,
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "amount",
                    djmoney.models.fields.MoneyField(
                        decimal_places=2,
                        default_currency="EUR",
                        max_digits=8,
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical pettycash sku",
                "verbose_name_plural": "historical pettycash skus",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPettycashReimbursementRequest",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=django.utils.timezone.now, help_text="Date of expense"
                    ),
                ),
                (
                    "submitted",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Date the request was submitted",
                    ),
                ),
                (
                    "amount_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[("EUR", "Euro")],
                        default="EUR",
                        editable=False,
                        max_length=3,
                    ),
                ),
                (
                    "amount",
                    djmoney.models.fields.MoneyField(
                        decimal_places=2,
                        default_currency="EUR",
                        help_text="This system will only accept reimbursement up to 100.0. Above that; contact the trustees directly (hetbestuur@lists.makerspaceleiden.nl)",
                        max_digits=8,
                        validators=[
                            djmoney.models.validators.MinMoneyValidator(0),
                            djmoney.models.validators.MaxMoneyValidator(
                                Decimal("100.0")
                            ),
                        ],
                    ),
                ),
                (
                    "viaTheBank",
                    models.BooleanField(
                        default=False,
                        help_text="Check this box if you want to be paid via a IBAN/SEPA transfer; otherwise the amount will be credited to your Makerspace petty cash acount",
                    ),
                ),
                (
                    "isPayout",
                    models.BooleanField(
                        default=False, help_text="Internal hidden field"
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="Description / omschrijving van waarvoor deze betaling is",
                        max_length=300,
                    ),
                ),
                (
                    "scan",
                    models.TextField(
                        blank=True,
                        help_text="Scan, photo or similar of the receipt",
                        max_length=100,
                        null=True,
                        validators=[
                            stdimage.validators.MinSizeValidator(100, 100),
                            stdimage.validators.MaxSizeValidator(8000, 8000),
                        ],
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "dst",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Person to reemburse (usually you, yourself)",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical pettycash reimbursement request",
                "verbose_name_plural": "historical pettycash reimbursement requests",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPettycashBalanceCache",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "balance_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[("EUR", "Euro")],
                        default="EUR",
                        editable=False,
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "balance",
                    djmoney.models.fields.MoneyField(
                        decimal_places=2,
                        default_currency="EUR",
                        max_digits=8,
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        help_text="Last transaction that changed the balance",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="pettycash.pettycashtransaction",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical pettycash balance cache",
                "verbose_name_plural": "historical pettycash balance caches",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
